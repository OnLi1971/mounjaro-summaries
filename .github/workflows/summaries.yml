name: Create Summaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'summaries/**'
  schedule:
    - cron: "0 8 * * *"  # 08:00 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: summaries
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # Podpora dvou secretů: GOOGLE_SERVICE_ACCOUNT_JSON (raw) nebo GOOGLE_SERVICE_ACCOUNT_JSON_B64 (base64)
      - name: Write & validate google-service-account.json (plain or base64)
        shell: bash
        env:
          SVC_RAW: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          SVC_B64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_B64 }}
        run: |
          set -euo pipefail
          if [ -n "${SVC_RAW:-}" ] && [ "${SVC_RAW:0:1}" = "{" ]; then
            printf '%s' "$SVC_RAW" > google-service-account.json
            echo "Wrote service account from plain JSON secret."
          elif [ -n "${SVC_B64:-}" ]; then
            echo "$SVC_B64" | base64 -d > google-service-account.json
            echo "Wrote service account from base64 secret."
          else
            echo "ERROR: No valid GOOGLE_SERVICE_ACCOUNT_JSON or GOOGLE_SERVICE_ACCOUNT_JSON_B64 provided."
            exit 1
          fi
          bytes=$(wc -c < google-service-account.json || echo 0)
          echo "service-account.json size: ${bytes} bytes"
          if [ "$bytes" -lt 100 ]; then
            echo "ERROR: service-account.json looks too small — secret is likely truncated."
            exit 1
          fi
          node -e "const fs=require('fs');JSON.parse(fs.readFileSync('google-service-account.json','utf8'));console.log('Service account OK');"
          chmod 600 google-service-account.json

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Robustní instalace přes více registrů (řeší 403/429)
      - name: Install dependencies (multi-registry, retry)
        shell: bash
        run: |
          set -e
          npm config set fund false
          npm config set audit false
          npm config set fetch-retries 5
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          if [ -f package-lock.json ]; then
            CMD="npm ci --no-audit --no-fund"
          else
            CMD="npm install --no-audit --no-fund"
          fi
          success=""
          for registry in https://registry.npmjs.org/ https://registry.yarnpkg.com/ https://registry.npmmirror.com/; do
            echo "Trying registry: $registry"
            npm config set registry "$registry"
            for attempt in 1 2 3 4 5; do
              echo "Attempt $attempt: $CMD (registry=$registry)"
              if $CMD; then
                echo "Dependencies installed (registry=$registry)."
                success="yes"
                break 2
              fi
              sleep $((attempt * 10))
            done
          done
          if [ -z "$success" ]; then
            echo "Install failed across all registries."
            exit 1
          fi

      # Dočasné doplnění runtime knihoven (pokud nejsou v package.json)
      - name: Install runtime extras (jsdom, readability, normalize-url)
        shell: bash
        run: |
          set -e
          npm config set fund false
          npm config set audit false
          npm config set fetch-retries 5
          npm config set fetch-retry-mintimeout 20000
          npm config set fetch-retry-maxtimeout 120000
          success=""
          for registry in https://registry.npmjs.org/ https://registry.yarnpkg.com/ https://registry.npmmirror.com/; do
            echo "Trying registry for extras: $registry"
            npm config set registry "$registry"
            for attempt in 1 2 3 4 5; do
              echo "Attempt $attempt: npm i --no-save jsdom @mozilla/readability normalize-url (registry=$registry)"
              if npm i --no-save jsdom @mozilla/readability normalize-url; then
                echo "Extras installed (registry=$registry)."
                success="yes"
                break 2
              fi
              sleep $((attempt * 10))
            done
          done
          if [ -z "$success" ]; then
            echo "Extras install failed across all registries."
            exit 1
          fi

      # Opraví případnou kolizi: soubor 'summaries' vs. složka 'summaries/'
      - name: Ensure summaries/ directory (fix conflicts)
        shell: bash
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e
          if [ -f summaries ]; then
            echo "Found file named 'summaries' — fixing…"
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            git checkout "$BRANCH_NAME"
            git mv summaries summaries-old.txt
            mkdir -p summaries
            git add summaries summaries-old.txt
            git commit -m "fix: free 'summaries/' directory name (rename conflicting file)" || true
            git push origin "$BRANCH_NAME" || true
          else
            mkdir -p summaries
          fi

      - name: Run summarizer script
        shell: bash
        env:
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHEET_ID: 1KgrYXHpVfTAGQZT6f15aARGCQ-qgNQZM4HWQCiqt14s
          SHEET_NAME: List1
        run: node perplexity-sheet-to-github.js

      # Vypne Jekyll a zajistí minimální web skeleton (když nic nevzniklo)
      - name: Ensure docs skeleton
        shell: bash
        run: |
          mkdir -p docs
          touch docs/.nojekyll
          if [ ! -f docs/index.html ]; then
            printf %b '<!doctype html>\n<meta charset="utf-8">\n<meta name="viewport" content="width=device-width,initial-scale=1">\n<title>Mounjaro Summaries</title>\n<link rel="stylesheet" href="./styles.css">\n<div class="container">\n  <h1>Mounjaro Summaries</h1>\n  <p>Obsah se sem doplní po běhu workflow.</p>\n</div>\n' > docs/index.html
          fi
          if [ ! -f docs/styles.css ]; then
            printf %b 'body{font:16px/1.6 system-ui,Segoe UI,Roboto,Arial;margin:0;padding:24px}\n.container{max-width:900px;margin:0 auto}\n' > docs/styles.css
          fi

      # Commit & push změn v docs/ (nejdřív commit, pak fetch/rebase, pak push s retriem)
      - name: Commit website updates (docs/)
        if: always()
        shell: bash
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          git checkout "$BRANCH_NAME"

          if [ ! -d docs ]; then
            echo "No docs/ directory generated — skipping commit."
            exit 0
          fi

          git add docs

          if git diff --cached --quiet; then
            echo "No changes in docs/ — nothing to commit."
            exit 0
          fi

          # 1) commit lokálních změn (BEZ [skip ci], ať proběhne Pages build)
          git commit -m "Update website (docs)"

          # 2) srovnání se vzdálenou větví
          git fetch origin "$BRANCH_NAME"
          if ! git rebase "origin/$BRANCH_NAME"; then
            echo "Rebase failed, falling back to a merge pull…"
            git rebase --abort || true
            git pull --no-rebase origin "$BRANCH_NAME"
          fi

          # 3) push s retriem při závodu
          for attempt in 1 2 3; do
            if git push origin HEAD:"$BRANCH_NAME"; then
              echo "Pushed on attempt $attempt."
              break
            fi
            echo "Push rejected, refetching and rebasing…"
            git fetch origin "$BRANCH_NAME"
            git rebase "origin/$BRANCH_NAME" || true
            [ "$attempt" -eq 3 ] && exit 1
            sleep $((attempt * 5))
          done
